//@version=5
indicator("Wavelet-Approximated Oversold/Overbought Bands", overlay=true)

// Inputs
len = input.int(90, "Lookback Period for Volatility")
smoothLen = input.int(14, "Gaussian Smoothing Length (Wavelet Scale)")
multBase = input.float(1.0, "Base Multiplier")
multAccel = input.float(0.5, "Acceleration Multiplier (for speed/leverage)")
liqWeightDown = input.float(1.5, "Downside Liquidation Weight")
liqWeightUp = input.float(1.2, "Upside Liquidation Weight")

// Gaussian smoothing approximation for wavelet low-pass filter
gaussWeight(int i, int sigma) => math.exp(-math.pow(i, 2) / (2 * math.pow(sigma, 2)))

var float[] weights = array.new<float>(smoothLen + 1)

if barstate.isfirst
    float sumWeights = 0.0
    for i = 0 to smoothLen
        float w = gaussWeight(i, smoothLen / 2)
        array.set(weights, i, w)
        sumWeights += w
    for i = 0 to array.size(weights) - 1
        array.set(weights, i, array.get(weights, i) / sumWeights)

// Denoised trend (convolve close with Gaussian)
closeLog = math.log(close)
smoothed = 0.0
if bar_index >= smoothLen
    for i = 0 to smoothLen
        smoothed += closeLog[i] * array.get(weights, i)
    smoothed := math.exp(smoothed) // Back to price scale
else
    smoothed := close

// Momentum acceleration (speed of ROC change)
rocLen = input.int(30, "ROC Length for Acceleration")
roc = bar_index >= rocLen ? ta.roc(close, rocLen) : 0.0
speed = bar_index >= rocLen + 1 ? math.min(math.abs(ta.change(roc)), 2.0) : 0.0 // Proxy for growth/decline speed, capped at 200%

// Dynamic volatility (stdev over lookback, adjusted by direction and speed)
downChanges = array.new<float>(0)
upChanges = array.new<float>(0)

if bar_index >= len
    array.clear(downChanges)
    array.clear(upChanges)
    for i = 1 to len
        changeVal = close[i-1] - close[i]
        if changeVal > 0
            array.push(downChanges, changeVal)
        else if changeVal < 0
            array.push(upChanges, -changeVal)

// Limit volatility to reasonable bounds (min 1%, max 20% of current price)
minVol = close * 0.01
maxVol = close * 0.20
volDown = array.size(downChanges) > 1 ? math.max(minVol, math.min(array.stdev(downChanges) * (multBase + speed * multAccel) * liqWeightDown, maxVol)) : close * 0.02
volUp = array.size(upChanges) > 1 ? math.max(minVol, math.min(array.stdev(upChanges) * (multBase + speed * multAccel) * liqWeightUp, maxVol)) : close * 0.02

// Multi-level bands (asymmetric - wider upper bands to capture more upside)
// Lower bands (oversold) - keep current levels
offset1 = 0.5
offset2 = 1.0
offset3 = 1.5
offset4 = 2.0

// Upper bands (overbought) - extend further to capture more upside
upperOffset1 = 1.0    // was 0.5
upperOffset2 = 2.0    // was 1.0
upperOffset3 = 3.0    // was 1.5
upperOffset4 = 4.0    // was 2.0

bandLower1 = smoothed - volDown * offset1
bandLower2 = smoothed - volDown * offset2
bandLower3 = smoothed - volDown * offset3
bandLower4 = smoothed - volDown * offset4

bandUpper1 = smoothed + volUp * upperOffset1
bandUpper2 = smoothed + volUp * upperOffset2
bandUpper3 = smoothed + volUp * upperOffset3
bandUpper4 = smoothed + volUp * upperOffset4

// Plot central trend as a plot object
pTrend = plot(smoothed, "Denoised Trend", color=color.white, linewidth=2)

// Plot invisible lines for fills
pL1 = plot(bandLower1, color=na)
pL2 = plot(bandLower2, color=na)
pL3 = plot(bandLower3, color=na)
pL4 = plot(bandLower4, color=na)
pU1 = plot(bandUpper1, color=na)
pU2 = plot(bandUpper2, color=na)
pU3 = plot(bandUpper3, color=na)
pU4 = plot(bandUpper4, color=na)

// Rainbow fills (oversold lower, overbought upper)
fill(pL4, pL3, color.new(color.blue, 60), title="Extreme Oversold (FireSale)")
fill(pL3, pL2, color.new(color.aqua, 60), title="Strong Oversold (BUY!)")
fill(pL2, pL1, color.new(color.lime, 60), title="Moderate Oversold (Accumulate)")
fill(pL1, pTrend, color.new(color.green, 60), title="Mild Oversold (Still Cheap)")
fill(pTrend, pU1, color.new(color.yellow, 60), title="Mild Overbought (HODL?)")
fill(pU1, pU2, color.new(color.orange, 60), title="Moderate Overbought (Bubble? FOMO)")
fill(pU2, pU3, color.new(color.red, 60), title="Strong Overbought (SELL!!)")
fill(pU3, pU4, color.new(color.purple, 60), title="Extreme Overbought (Maximum Bubble)")

// Local extrema on smoothed for signals
peaks = bar_index >= 10 ? ta.pivothigh(smoothed, 5, 5) : na
troughs = bar_index >= 10 ? ta.pivotlow(smoothed, 5, 5) : na

// Plot buy/sell signals as circles instead of background colors
plotshape(peaks, title="Sell Signal", style=shape.circle, location=location.abovebar, color=color.red, size=size.small)
plotshape(troughs, title="Buy Signal", style=shape.circle, location=location.belowbar, color=color.lime, size=size.small)

// Alerts
alertcondition(troughs, "Potential Oversold Bottom", "Price may be at an oversold local bottom")
alertcondition(peaks, "Potential Overbought Top", "Price may be at an overbought local top")
